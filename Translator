class Translator:
    d = {}

    def add(self, eng, rus):
        if eng not in self.d:
            self.d[eng] = [rus]
        elif eng in self.d and rus not in self.d[eng]:
            self.d[eng].append(rus)

    def remove(self, eng):
        del self.d[eng]

    def translate(self, eng):
        return self.d[eng]


tr = Translator()
words = [('tree', 'дерево'), ('car', 'машина'), (
    'car', 'автомобиль'), ('leaf', 'лист'), ('river', 'река'), (
    'go', 'идти'), ('go', 'ехать'), ('go', 'ходить'), ('milk', 'молоко')]
[tr.add(*w) for w in words]
tr.remove('car')
print(*tr.translate('go'))
 16  
1/1.4/1.4.4.py
@@ -0,0 +1,16 @@
class MediaPlayer:

    def open(self, file):
        self.filename = file

    def play(self):
        print(f'Воспроизведение {self.filename}')


media1 = MediaPlayer()
media2 = MediaPlayer()

media1.open('filemedia1')
media2.open('filemedia2')
media1.play()
media2.play()
 19  
1/1.4/1.4.5.py
@@ -0,0 +1,19 @@
class Graph:

    def set_data(self, data):
        self.data = data

    def draw(self):
        # for x in self.data:
        #     if self.LIMIT_Y[0] <= x <= self.LIMIT_Y[1]:
        #         print(x, end=' ')
        print(' '.join(map(str, filter(
            lambda x: self.LIMIT_Y[0] <= x <= self.LIMIT_Y[1], self.data))))

    LIMIT_Y = [0, 10]


graph_1 = Graph()

graph_1.set_data([10, -5, 100, 20, 0, 80, 45, 2, 5, 7])
graph_1.draw()
 23  
1/1.4/1.4.7.py
@@ -0,0 +1,23 @@
import sys

class StreamData:

    def create(self, fields, lst_values):
        return False if len(fields) != len(
            lst_values) else [setattr(
            self, fields[_], lst_values[_]) for _ in range(len(fields))]
        return True


class StreamReader:
    FIELDS = ('id', 'title', 'pages')

    def readlines(self):
        lst_in = list(map(str.strip, sys.stdin.readlines()))  # считывание списка строк из входного потока
        sd = StreamData()
        res = sd.create(self.FIELDS, lst_in)
        return sd, res


sr = StreamReader()
data, result = sr.readlines()
 19  
1/1.4/1.4.9.py
@@ -0,0 +1,19 @@
import sys

lst_in = list(map(str.strip, sys.stdin.readlines()))  # считывание списка строк из входного потока


class DataBase:
    lst_data = []
    FIELDS = ('id', 'name', 'old', 'salary')

    def select(self, a, b):
        return self.lst_data[a:b + 1]

    def insert(self, data):
        [self.lst_data.append(dict(zip(
            self.FIELDS, data[i].split()))) for i in range(len(data))]


db = DataBase()
db.insert(lst_in)
